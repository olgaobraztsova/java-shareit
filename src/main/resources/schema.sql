drop table if exists users cascade;
drop table if exists items cascade;
drop table if exists bookings cascade;
drop table if exists comments cascade;


CREATE TABLE IF NOT EXISTS users (
	id INTEGER GENERATED BY DEFAULT AS identity not null,
	name VARCHAR(255) NOT NULL,
	email VARCHAR(512) NOT null,
	CONSTRAINT pk_user PRIMARY KEY (id),
  	CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
); 

CREATE TABLE IF NOT EXISTS items 
( 
	id INTEGER GENERATED ALWAYS AS identity not NULL, 
	name VARCHAR(128) not null,
	description VARCHAR(512) not null, 
	available BOOLEAN not null, 
	owner_id int not null,
	CONSTRAINT pk_item PRIMARY KEY (id),
	constraint fk_item_user FOREIGN KEY(owner_id) REFERENCES users(id) ON DELETE CASCADE
);


CREATE TABLE IF NOT EXISTS bookings (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  item_id INTEGER NOT NULL,
  booker_id INTEGER NOT NULL,
  status VARCHAR(8) NOT NULL CHECK (status IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED')),
  CONSTRAINT pk_booking PRIMARY KEY (id),
  CONSTRAINT fk_bookings_items FOREIGN KEY(item_id) REFERENCES items(id) ON DELETE CASCADE,
  CONSTRAINT fk_bookings_users FOREIGN KEY(booker_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments (
  id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  text VARCHAR(500),
  item_id INTEGER NOT NULL,
  author_id INTEGER NOT NULL,
  create_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT pk_comment PRIMARY KEY (id),
  CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id),
  CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id)
);

